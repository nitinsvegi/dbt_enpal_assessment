
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'enpal_assessment_project'
version: '1.0.0'

# This setting configures which "profile" dbt uses for this project.
profile: 'enpal_assessment_project'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# -------------------------------
# Adding variable mappings here
# -------------------------------
# These vars define the target schemas for models in each layer:
# - stg_schemas: staging models
# - int_schemas: intermediate models
# - rep_schemas: reporting models
# The macros (custom_schema + generate_schema_name) use these vars
# to build each model in the correct schema.
vars:
  stg_schemas:
    stg_users: pipedrive_analytics
    stg_activity: pipedrive_analytics
    stg_activity_types: pipedrive_analytics
    stg_deal_changes: pipedrive_analytics
    stg_fields: pipedrive_analytics
    stg_stages: pipedrive_analytics
    stg_lost_reasons: pipedrive_analytics

  int_schemas:
    int_deal_changes: pipedrive_analytics
    int_activity: pipedrive_analytics

  rep_schemas:
    rep_sales_funnel_monthly: pipedrive_analytics

# Using a single schema for all layers since this is a take-home assessment 
# and the target databases aren't pre-created. In a real setup, these would 
# map to separate staging/intermediate/reporting schemas.   

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
models:
  enpal_assessment_project:
    # Config indicated by + and applies to all files under models/example/
    +schema: pipedrive_analytics
    +materialized: table
